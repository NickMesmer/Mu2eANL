// Re-sample dsregion stream particles from stage-1 outputs
// Ben Barton, 2019
// based off JobConfig/beam/DS-flash.fcl by Andrei Gaponenko, 2018

#include "JobConfig/beam/prolog.fcl"

process_name: PlanesResampler

source: { module_type : EmptyEvent }
services: { @table::mu2e.services.simServices }
physics: { @table::mu2e.physics.g4s4Flash } 
outputs: { @table::mu2e.outputs.g4s4Defs }

//----------------------------------------------------------------
// Mofidy setup for resampling the dsregion from s1 outputs

// We should run genCounter for all EmptyEvent jobs.
physics.producers.genCounter: {module_type: GenEventCounter }
physics.analyzers.genCounterLogger: {module_type: GenEventCountReader}

//Module to produce an NTuple of event data for easy viewing of outputs
physics.analyzers.HitDumper : {
   module_type: StepPointMC1stHitDumper
   hitsInputTag: "g4run:DSVacuum"
   TimeOffsets: {}
}

// Bring in info from the previous stage
physics.filters.flashResample: {
   module_type: ResamplingMixer
   fileNames: @nil  
   readMode: "sequential"
   wrapFiles: true
   mu2e: {
      products: {
	 genParticleMixer: { mixingMap: [ [ "generate", "" ] ] }
//	 simParticleMixer: { mixingMap: [ [ "planesFilter", ""] ] } 
//	 stepPointMCMixer: { mixingMap: [ [ "planesFilter:Planes", ":" ] ] }
	 simParticleMixer: { mixingMap: [ [ "dsRegionFilter", ""] ] } 
	 stepPointMCMixer: { mixingMap: [ [ "dsRegionFilter:dsregion", ":" ] ] }
      }
   }
}

// Point Mu2eG4 to the pre-simulated data
physics.producers.g4run.MultiStageParameters: {
   simParticleNumberOffset: 200000 
//   genInputHits:  [ "flashResample:Planes" ]
   genInputHits:  [ "flashResample:dsregion" ]
   inputSimParticles: "flashResample"
   inputMCTrajectories: ""
   inputPhysVolumeMultiInfo: "" 
}


physics.producers.g4run.Mu2eG4StackingOnlyCut: {
// do not stack neutrinos and soft gammas. no point to re-check this in stepping.
   type: pdgId pars: [ 12, -12, 14, -14, 16, -16]
}

physics.producers.g4run.Mu2eG4SteppingOnlyCut:{
   type: union
   pars: 
   [
   {type: intersection
   pars: [ { type: kineticEnergy cut: 500 }, { type: pdgId pars: [ 2112, 2212] }]},
   {type: intersection
   pars: [ { type: kineticEnergy cut: 80 }, { type: pdgId pars: [ 22, 11, -11 ] }]},
   {type: intersection
   pars: [ { type: kineticEnergy cut: 45 }, { type: pdgId pars: [ 13, -13] }]}
   ]
}

##Resample only K-longs and write to DSVacuum
physics.producers.g4run.Mu2eG4CommonCut: {
   type: inVolume 
   pars: [DS1Vacuum, DS2Vacuum, DS3Vacuum]
   write: DSVacuum
}


//----------------------------------------------------------------
// The final filter
physics.filters.dsFilter: {
         module_type: FilterG4Out
	 noInstanceName : true
         mainHitInputs : [ "g4run:DSVacuum" ]
         extraHitInputs : [ ]
         numSimParticleCollections : 1
         vetoDaughters: []
}

physics.filters.g4status: {
         module_type: FilterStatusG4
         input: "g4run"
	 maxAcceptedStatus: 1  #  status 10 and above means StepPointMCCollection may have non-dereferencable pointers
}


physics.producers.compressPVFull : {
         module_type: CompressPhysicalVolumes
         volumesInput : "g4run"
         hitInputs : []
         particleInputs : [ "g4run" ]
}

physics.trig: [genCounter, flashResample, g4run, g4consistent, dsFilter]
physics.g4StatusFilter : [flashResample, g4run, "!g4status", compressPVFull ]
physics.outputs: [truncatedEvtsOutput, DSVacuumOut]
physics.an: [genCountLogger, HitDumper]
physics.end_paths: [outputs, an]
physics.trigger_paths: [trig, g4StatusFilter]

outputs.DSVacuumOut : {
      module_type : RootOutput
      SelectEvents: ["trig"]
      outputCommands:   [ "drop *_*_*_*",
         "keep mu2e::GenParticles_*_*_*",
         "keep mu2e::GenEventCount_*_*_*",
         "keep mu2e::StatusG4_*_*_*",
         "keep *_dsFilter_*_*"
      ]
      fileName    : "sim.owner.resampled-planes.version.sequencer.art"
   }

outputs.truncatedEvtsOutput : {
      module_type : RootOutput
      SelectEvents: ["g4StatusFilter"]
      outputCommands:   [ "drop *_*_*_*",
         "keep mu2e::GenParticles_*_*_*",
         "keep mu2e::GenEventCount_*_*_*",
         "keep mu2e::StatusG4_*_*_*",
         "keep *_g4run_*_*",
         "drop uintmu2e::PhysicalVolumeInfomvstd::pairs_g4run_*_*",
         "keep *_compressPVFull_*_*"
      ]
      fileName    : "sim.owner.resampled-planes-truncated.version.sequencer.art"
   }

// Set output file names
services.TFileService.fileName: "nts.owner.dsregion-resampled-planes.version.sequencer.root"
outputs.detectorOutput.fileName: "sim.owner.dsregion-resampled-planes.version.sequencer.art"

//Specify Mu2e geometry
services.GeometryService.simulatedDetector.tool_type : "Mu2e"
physics.producers.g4run.SDConfig.preSimulatedHits: []
physics.producers.g4run.TrajectoryControl: @local::mu2eg4DefaultTrajectories
physics.producers.g4run.physics.noDecay: [130] // K-long lifetime to infinity

//Contatenated filtered planes configuration
//physics.filters.flashResample.fileNames: ["/pnfs/mu2e/scratch/users/oksuzian/workflow/beam_0619/outstage/22280531.fcllist_190804110356/00/sim.oksuzian.filtered-planes.beamplanes_filter_0619.002701.art"]
