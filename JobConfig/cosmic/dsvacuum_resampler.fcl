// Re-sample dsregion stream particles from stage-1 outputs
// Ben Barton, 2019
// based off JobConfig/beam/DS-flash.fcl by Andrei Gaponenko, 2018

#include "JobConfig/beam/prolog.fcl"

process_name: DSvacuumResampler

source:   { module_type : EmptyEvent }
services: { @table::mu2e.services.simServices }
physics:  { @table::mu2e.physics.g4s4Flash } 
outputs:  { @table::mu2e.outputs.g4s4Defs }

//----------------------------------------------------------------
// Mofidy setup for resampling the dsregion from s1 outputs

// We should run genCounter for all EmptyEvent jobs.
physics.producers.genCounter: {module_type: GenEventCounter }
physics.analyzers.genCounterLogger: {module_type: GenEventCountReader}

//Module to produce an NTuple of event data for easy viewing of outputs
physics.analyzers.HitDumper : {
   module_type: StepPointMC1stHitDumper
   hitsInputTag: "g4run:crvStage1"
   TimeOffsets: {}
}

// Bring in info from the previous stage
physics.filters.dsResample: {
   module_type: ResamplingMixer
   fileNames: @nil  
   readMode: "sequential"
   wrapFiles: true
   mu2e: {
      products: {
	 genParticleMixer: { mixingMap: [ [ "generate", "" ] ] }
	 simParticleMixer: { mixingMap: [ [ "cosmicFilter", ""] ] } 
	 stepPointMCMixer: { mixingMap: [ [ "cosmicFilter:crvStage1", ":" ] ] }
      }
   }
}

// Point Mu2eG4 to the pre-simulated data
physics.producers.g4run.MultiStageParameters: {
   simParticleNumberOffset: 300000 
   genInputHits:  [ "dsResample:crvStage1" ]
   inputSimParticles: "dsResample"
   inputMCTrajectories: ""
   inputPhysVolumeMultiInfo: "" 
}

//----------------------------------------------------------------
// The final filter
physics.filters.dsFilter: {
         module_type: FilterG4Out
	 noInstanceName : true
         mainHitInputs : [ "dsResample:crvStage1" ]
         extraHitInputs : [ ]
         numSimParticleCollections : 1
         vetoDaughters: []
}

physics.filters.stepPointMomentumFilter: {
        module_type: FilterStepPointMomentum
        inputs : [ "dsResample:crvStage1" ]
        cutMomentumMin: 45.  // MeV/c to accommodate muons decaying into electrons with a momentum of 80 MeV/c
        cutMomentumMax: 500. // Filter straight tracks
}

physics.filters.trackerStepPointFilter : 
      {
         module_type : TrackerStepPointFilter 
      }

physics.filters.detectorFilter:
      {
         module_type: FilterG4Out
	 noInstanceName : true
         mainHitInputs: [ "g4run:tracker", "g4run:calorimeter", "g4run:calorimeterRO", "g4run:CRV" ]
         extraHitInputs : [ "g4run:virtualdetector", "g4run:protonabsorber" ]
         mcTrajectoryInputs : [ "g4run" ]
         numSimParticleCollections : 1
         vetoDaughters: []
      }

physics.filters.g4status: {
         module_type: FilterStatusG4
         input: "g4run"
	 maxAcceptedStatus: 1  #  status 10 and above means StepPointMCCollection may have non-dereferencable pointers
}

physics.producers.compressPV : {
         module_type: CompressPhysicalVolumes
         volumesInput : "g4run"
         hitInputs : []
         particleInputs : [ "detectorFilter" ]
}

physics.producers.compressPVFull : {
         module_type: CompressPhysicalVolumes
         volumesInput : "g4run"
         hitInputs : []
         particleInputs : [ "g4run" ]
}

physics.trig: [genCounter, dsResample, g4run, g4consistent, stepPointMomentumFilter, dsFilter, trackerStepPointFilter, detectorFilter]
#physics.g4StatusFilter : [dsResample, g4run, "!g4status", compressPVFull ]
physics.g4StatusFilter : [dsResample, g4run, "!g4status", compressPVFull]
physics.outputs: [truncatedEvtsOutput, DSVacuumOut]
physics.an: [genCountLogger, HitDumper]
physics.end_paths: [outputs, an]
physics.trigger_paths: [trig, g4StatusFilter]

outputs.DSVacuumOut : {
      module_type : RootOutput
      SelectEvents: ["trig"]
      outputCommands:   [ 
         "drop *_*_*_*",
         "keep mu2e::GenParticles_*_*_*",
         "keep mu2e::GenEventCount_*_*_*",
         "keep mu2e::StatusG4_*_*_*",
         "keep *_detectorFilter_*_*",
         "keep *_compressPV_*_*"
      ]
      fileName    : "sim.owner.s1-resampled-dsvacuum.version.sequencer.art"
   }

outputs.truncatedEvtsOutput : {
      module_type : RootOutput
      SelectEvents: ["g4StatusFilter"]
      outputCommands:   [ "drop *_*_*_*",
         "keep mu2e::GenParticles_*_*_*",
         "keep mu2e::GenEventCount_*_*_*",
         "keep mu2e::StatusG4_*_*_*",
         "keep *_g4run_*_*",
         "drop uintmu2e::PhysicalVolumeInfomvstd::pairs_g4run_*_*",
         "keep *_compressPVFull_*_*"
      ]
      fileName    : "sim.owner.s1-resampled-dsvacuum-truncated.version.sequencer.art"
   }

// Set output file names
services.TFileService.fileName: "nts.owner.dsregion-resampled-dsvacuum.version.sequencer.root"
//outputs.detectorOutput.fileName: "sim.owner.dsregion-resampled-TrkCal.version.sequencer.art"

//Specify Mu2e geometry
services.GeometryService.simulatedDetector.tool_type : "Mu2e"
physics.producers.g4run.SDConfig.preSimulatedHits: []
physics.producers.g4run.TrajectoryControl: @local::mu2eg4DefaultTrajectories
//	type: inVolume pars: [ worldDirtBottom ]
physics.producers.g4run.Mu2eG4CommonCut:{
	type: intersection
	pars: [
	{type: notInVolume 
	pars: [ TS5CryoInsVac, TS5Vacuum, Coll51, DS1Vacuum, DS2Vacuum, DS3Vacuum ]},
	{type: intersection
	pars: [ { type: kineticEnergy cut: 10 }, { type: pdgId pars: [ 2112, 22, 11, -11 ] }]}
	]
}
//physics.producers.g4run.ResourceLimits.maxSimParticleCollectionSize: 1000000

//physics.filters.dsResample.fileNames: ["/pnfs/mu2e/scratch/users/oksuzian/workflow/cry_0919/outstage/22979822.fcllist_190907134344/00/sim.oksuzian.minedep-filter.cryminedep_filter_0919.2701.art"]
physics.filters.dsResample.fileNames: ["/pnfs/mu2e/scratch/users/oksuzian/workflow/cry_0919/outstage/23774693.fcllist_190911085549/00/sim.oksuzian.minedep-filter.cryminedep_filter_0919.2701.art"]