// Re-sample dsregion stream particles from stage-1 outputs
// Ben Barton, 2019
// based off JobConfig/beam/DS-flash.fcl by Andrei Gaponenko, 2018

#include "JobConfig/beam/prolog.fcl"

process_name: dsRegionResampling


source: { module_type : EmptyEvent }
services: { @table::mu2e.services.simServices }
physics: { @table::mu2e.physics.g4s4Flash } 
outputs: { @table::mu2e.outputs.g4s4Defs }

//----------------------------------------------------------------
// Mofidy setup for resampling the dsregion from s1 outputs

physics.trigger_paths: [ detPath ]
physics.out: [ detectorOutput ] 

// We should run genCounter for all EmptyEvent jobs.
physics.producers.genCounter: {module_type: GenEventCounter }

// Bring in info from the previous stage
physics.filters.flashResample: {
   module_type: ResamplingMixer
   fileNames: @nil  
   readMode: "sequential"
   wrapFiles: true
   mu2e: {
      products: {
	 genParticleMixer: { mixingMap: [ [ "generate", "" ] ] }
	 simParticleMixer: { mixingMap: [ ["crvFilter", ""] ] } 
	 stepPointMCMixer: { mixingMap: [ [ "crvFilter:DSVacuum", ":" ] ] }
      }
   }
}

// Point Mu2eG4 to the pre-simulated data
physics.producers.g4run.MultiStageParameters: {
   simParticleNumberOffset: 300000 
   genInputHits:  [ "flashResample:DSVacuum" ]
   inputSimParticles: "flashResample"
   inputMCTrajectories: ""
   inputPhysVolumeMultiInfo: "" 
}


## Resample only K-longs and high energy neutrons
physics.producers.g4run.Mu2eG4SteppingOnlyCut: {
   type: union
   pars: [ { type: intersection 
   	     pars: [{type: kineticEnergy cut: 100}, 
	     	    {type: pdgId pars: [2112]}] },
           { type: pdgId pars: [130] }  ]
}



physics.filters.dsPrefilter: {
   module_type: FilterG4Out
   noInstanceName : true
   mainHitInputs: [ "g4run:tracker", "g4run:calorimeter", "g4run:calorimeterRO", "g4run:CRV" ]
   extraHitInputs: [ "g4run:protonabsorber"]
   numSimParticleCollections: 1
}


physics.producers.g4run.flash.SDConfig.preSimulatedHits: [""]
mu2e.physics.producers.g4run.flash.SDConfig.preSimulatedHits:  [] ///////// This line doesn't do anything - had to change in prolog ????



//----------------------------------------------------------------
// Fix shower compressor config
physics.producers.CaloShowerStepFromStepPt.physVolInfoInput: g4run
physics.producers.CaloShowerStepFromStepPt.usePhysVolInfo: true
physics.producers.CaloShowerStepFromStepPt.calorimeterStepPoints: "dsPrefilter:calorimeter" 
physics.producers.CaloShowerStepFromStepPt.calorimeterROStepPoints: "dsPrefilter:calorimeterRO" 
// The module needs to stop using getMany() and accept InputTags for configuration.
// Until it is fixed, we have to use a hacked version.
physics.producers.CaloShowerStepFromStepPt.module_type: CaloShowerStepFromStepPtHACKED


//----------------------------------------------------------------
// The final filter
physics.filters.detectorFilter: {
   module_type: "FilterG4Out"
   noInstanceName: true
   numSimParticleCollections: 1
   mainHitInputs: ["dsPrefilter:tracker" , "dsPrefilter:CRV"]
   mainSPPtrInputs: ["CaloShowerStepFromStepPt"]
   extraHitInputs: [ ]
}

physics.filters.crvFilter.extraHitInputs: [""]

// Add genCounter and dsRegionResample to the trigger path.
physics.detPath: [ "genCounter", "flashResample", 
   //need to remove compressPVDetector//  @sequence::physics.detPath
   "g4run",
   "g4consistent",
   "dsPrefilter", # Filters out stuff not hitting tracker, calo, or CRV


   "CaloShowerStepFromStepPt",
   "detectorFilter", # filters out particles in calo showers

   "CaloShowerCrystalSteps",
   "CaloShowerROSteps"
]


// Set output file names
services.TFileService.fileName: "nts.owner.dsregion-resampled.version.sequencer.root"
outputs.detectorOutput.fileName: "sim.owner.dsregion-resampled-TrkCal.version.sequencer.art"

//Specify Mu2e geometry
services.GeometryService.simulatedDetector.tool_type : "Mu2e"

physics.filters.mothersFilter.extraHitInputs: [""]

physics.filters.flashResample.fileNames: ["/pnfs/mu2e/persistent/users/bbarton/beam_0619_s2_planes/21461118.fcllist_1907121150/00/00000/sim.bbarton.beam-g4s2-crv.beams2_0619.002701_00000000.art"]
